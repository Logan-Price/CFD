/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

scale   0.01;

vertices
(
    (-500 0 0)        // 0 // Front
    (0 0 0)           // 1
    (100 0 0)         // 2
    (1000 0 0)        // 3
    (-500 10 0)       // 4
    (0 10 0)          // 5
    (100 10 0)        // 6
    (1000 10 0)       // 7
    (-500 500 0)      // 8
    (0 500 0)         // 9
    (100 500 0)       // 10
    (1000 500 0)      // 11
	(-500 0 0.1)      	// 12 // Back
    (0 0 0.1)           // 13
    (100 0 0.1)         // 14
    (1000 0 0.1)        // 15
    (-500 10 0.1)       // 16
    (0 10 0.1)          // 17
    (100 10 0.1)        // 18
    (1000 10 0.1)       // 19
    (-500 500 0.1)      // 20
    (0 500 0.1)         // 21
    (100 500 0.1)       // 22
    (1000 500 0.1)      // 23
);

blocks
(
    hex (0 1 5 4 12 13 17 16) 	(10 3 1) 	simpleGrading (0.085 1 1)	// Lower Left Block
    hex (2 3 7 6 14 15 19 18) 	(20 3 1) 	simpleGrading (13 1 1)		// Lower Right Block
    hex (4 5 9 8 16 17 21 20) 	(10 60 1) 	simpleGrading (0.085 4 1)	// Upper Left Block
    hex (5 6 10 9 17 18 22 21) 	(10 60 1) 	simpleGrading (1 4 1)		// Center Block
    hex (6 7 11 10 18 19 23 22) (20 60 1)	simpleGrading (13 4 1)		// Upper Right Block
);

edges
(
	arc 5 6 (50 20 0)
	arc 17 18 (50 20 0.1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 12 16 4)
            (4 16 20 8)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (7 19 15 3)
            (11 23 19 7)
        );
    }
    lowerSymmetry
    {
        type symmetryPlane;
        faces
        (
            (0 1 13 12)	// Front of obstical
            (2 3 15 14) // Back of obstical
        );
    }
	obstical
    {
        type wall;
        faces
        (
            (1 5 17 13)	// Left side
            (5 6 18 17)	// Top 
            (2 14 18 6)	// Right side
        );
    }
    top
    {
        type patch;
        faces
        (
            (8 20 21 9)
            (9 21 22 10)
            (10 22 23 11)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
